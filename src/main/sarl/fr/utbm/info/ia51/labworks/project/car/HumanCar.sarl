package fr.utbm.info.ia51.labworks.project.car

import io.sarl.core.Initialize
import io.sarl.core.Destroy
import io.sarl.core.Logging

import fr.utbm.info.ia51.labworks.project.events.HumanCarPropertiesUpdate
import fr.utbm.info.ia51.labworks.project.events.EnterOneWayRoad
import fr.utbm.info.ia51.labworks.project.events.EnterEntryPoint
import fr.utbm.info.ia51.labworks.project.behaviors.OneWayRoadHumanBehavior
import fr.utbm.info.ia51.labworks.project.behaviors.EntryPointHumanBehavior
import fr.utbm.info.ia51.labworks.project.events.EnterTwoWayRoad
import fr.utbm.info.ia51.labworks.project.behaviors.TwoWayRoadHumanBehavior

agent HumanCar extends Car {
	uses Logging

	on Initialize {
		// Event trigger before the agent begin to live or to be used.
		// You should put all the initialization statements in this block of code.
		synchronized (this) {
			this.obedienceRate = occurrence.parameters.get(4) as Double
		}
		info("New human car spawned.")
	}

	on HumanCarPropertiesUpdate {
		this.obedienceRate = occurrence.obedienceRate
		info("Properties updated")
	}

	@SuppressWarnings("discouraged_occurrence_readonly_use")
	on EnterOneWayRoad {
		info("Entered " + occurrence.road)
		this.registerNewBehavior(new OneWayRoadHumanBehavior(this))
	}

	@SuppressWarnings("discouraged_occurrence_readonly_use")
	on EnterTwoWayRoad {
		info("Entered " + occurrence.road)
		this.registerNewBehavior(new TwoWayRoadHumanBehavior(this))
	}

	@SuppressWarnings("discouraged_occurrence_readonly_use")
	on EnterEntryPoint {
		info("Entered " + occurrence.road)
		this.currentElement = occurrence.road
		this.startPoint = occurrence.road
		this.endPoint = occurrence.destination
		this.registerNewBehavior(new EntryPointHumanBehavior(this))
	}

	on Destroy {
		// Event trigger when the agent is destroyed from the system.
		// You should put all the resource releasing statements in this block of code.
		info("Human car destroyed.")
	}
}
