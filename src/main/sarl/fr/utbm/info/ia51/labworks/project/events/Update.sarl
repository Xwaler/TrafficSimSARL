package fr.utbm.info.ia51.labworks.project.events

import java.util.List
import io.sarl.lang.core.Event
import fr.utbm.info.ia51.labworks.project.road.RoadElement
import fr.utbm.info.ia51.labworks.project.road.Intersection

event Update extends Event {
	
}

event PerceptionUpdate extends Update {
	var surroundingCars : List<PhysicsUpdate>

	new (surroundingCars : List<PhysicsUpdate>) {
		this.surroundingCars = surroundingCars
	}
}

event PhysicsUpdate extends Update {
	var newPosition : double
	var newSpeed : double
	var newAcceleration : double
	var newLane : double
	var newElement : RoadElement

	new {}

	new (
		newPosition : double,
		newSpeed : double,
		newAcceleration : double,
		newLane : double,
		newElement : RoadElement
	) {
		this.newPosition = newPosition
		this.newSpeed = newSpeed
		this.newAcceleration = newAcceleration
		this.newLane = newLane
		this.newElement = newElement
	}
}

event RequestNewObjective {
	var currentNode : Intersection
	
	new (currentNode : Intersection) {
		this.currentNode = currentNode
	}
}

event NewObjective {
	var newObjective : Intersection
	
	new (newObjective : Intersection) {
		this.newObjective = newObjective
	}
}

class CarProperties {
	public var position : double
	public var futurePosition : double
	public var speed : double
	public var futureSpeed : double
	public var direction : int
	public var lane : double
	public var element : RoadElement
	public var futureElement : RoadElement
	
	new (intent : Intent, physicsUpdate: PhysicsUpdate) {
		this.position = intent.currentPosition
		this.futurePosition = physicsUpdate.newPosition
		this.speed = intent.currentSpeed
		this.futureSpeed = physicsUpdate.newSpeed
		this.direction = intent.direction
		this.lane = intent.intendedLaneChange
		this.element = intent.currentElement
		this.futureElement = physicsUpdate.newElement
	}
}
