package fr.utbm.info.ia51.labworks.project.road

import java.util.List
import java.util.ArrayList
import io.sarl.lang.core.AgentContext

abstract class Intersection extends RoadElement {
	var links : List<Road>
	public var x : double
	public var y : double
	
	new (context : AgentContext, links : List<Road>) {
		super(context)
		this.links = links
		for (l : links) {
			l.addNode(this)
		}
	}
	
	def getLinks() : List<Road> {
		return this.links
	}

	def getAccessibleLinks() : List<Road> {
		var accessible : List<Road> = new ArrayList<Road>()
		for (link : this.links) {
			if (link.entryAllowed(this)) {
				accessible.add(link)
			}
		}
		return accessible
	}

	def toString() : String {
		return this.class.simpleName + '@' + this.hashCode + links.toString()
	}
}
